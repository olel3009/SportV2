name: Run Tests

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  setup-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      # 1. Set up Python
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      
      # 2. Set up Node
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      
      # 3. (Optional) Ensure Chrome is installed (GitHub runner usually has it, but this is to be sure)
      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          
      # 4. Install Python dependencies
      - name: Install Python Requirements
        run: pip install -r requirements.txt
      
      # 5. Install Node dependencies
      - name: Install Node Modules
        run: npm install
        working-directory: ./frontend
      
      # 6. Start your front-end dev server in the background
      - name: Start Frontend in Background
        run: |
          npm run build & npm start &
          echo $! > process.pid
          echo "Background process started with PID $(cat process.pid)."
        working-directory: ./frontend
      
      # 7. Run your Selenium tests using Xvfb to avoid display issues
      - name: Run Nav Test
        run: xvfb-run -a python ./frontend/tests/test_nav_menu.py
      - name: Run Login Page Test
        run: xvfb-run -a python ./frontend/tests/login_page.py
      - name: Run Wiki Tests
        run: xvfb-run -a python ./frontend/tests/test_wiki.py

      # 8. Set enviroment variable
      - name: Set environment
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            echo "Using PowerShell to set PYTHONPATH"
            echo "PYTHONPATH=${{ github.workspace }}" >> $Env:GITHUB_ENV
          else
            echo "Using Bash to set PYTHONPATH"
            echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV
          fi

      # 8. Create pdfs folder
      - name: Create pdfs folder
        run: mkdir -p api/pdfs

      # 9. API-Tests with Pytest
      - name: Run API Tests
        run: pytest --ignore=frontend/ --maxfail=1 --disable-warnings -v